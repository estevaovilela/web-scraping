sep = ";",
header = TRUE,
stringsAsFactors = FALSE,
showProgress = TRUE)
# Cleaning ----------------------------------------------------------------
# Selecionando variáveis de interesse
base <- base %>%
select(COD_INEP, DT_NASC, TP_SEXO, TP_COR_RACA, TP_ZONA_RESIDENCIAL,
IN_TRANSPORTE_PUBLICO, CD_ALUNO_15, NU_SEQUENCIAL_15,
CO_ENTIDADE_15,
TP_ETAPA_ENSINO_14, CO_ENTIDADE_14,
TP_ETAPA_ENSINO_16, CO_ENTIDADE_16,
TP_SITUACAO) %>%
mutate(COD_INEP = as.character(COD_INEP)) %>%
rename(SITUACAO_15 = TP_SITUACAO) %>%
mutate(DT_NASC = as.Date(DT_NASC, format = "%d/%m/%Y")) %>%
mutate(DISTORCAO_15 = as.numeric(as.Date("31/03/2015", format = "%d/%m/%Y") - DT_NASC)/365.25 - 15) %>%
mutate(DISTORCAO_15 = case_when(
DISTORCAO_15 <= 0 ~ 0.0,
TRUE ~ round(DISTORCAO_15, digits = 2)
)) %>%
mutate(EM_DISTORCAO_15 = case_when(
DISTORCAO_15 >= 2 ~ "Sim",
DISTORCAO_15 < 2 ~ "Não"
)) %>%
select(-DT_NASC)
# Missing Values
sort(base %>%
map_dbl(function(x) sum(is.na(x))/length(x)*100), decreasing = TRUE)
# Tratando o resultado dos alunos que não foram encontrados em 2015
base_temp <- base %>%
filter(is.na(SITUACAO_15)) %>%
mutate(SITUACAO_15 = case_when(
is.na(TP_ETAPA_ENSINO_16) ~ 5,
TP_ETAPA_ENSINO_16 == 25 ~ 2,
TRUE ~ 1
))
base <- base %>%
filter(!is.na(SITUACAO_15)) %>%
bind_rows(base_temp)
# Tratando o resultado dos alunos que não tem SIR
# Como tratar? Posso tratar?
# Tratando as etapas de 2014
base <- base %>%
mutate(SITUACAO_14 = case_when(
is.na(TP_ETAPA_ENSINO_14) ~ "Fora da escola",
TP_ETAPA_ENSINO_14 %in% c(25, 30) ~ "Repetência",
TP_ETAPA_ENSINO_14 %in% c(11, 41) ~ "Promoção",
TRUE ~ "Promoção por reclassificação"
)) %>%
select(-TP_ETAPA_ENSINO_14, -CO_ENTIDADE_14)
# Tratando as etapas de 2016
base <- base %>%
mutate(SITUACAO_16 = case_when(
is.na(TP_ETAPA_ENSINO_16) ~ "Evasão",
TRUE ~ "Não Evasão"
)) %>%
select(-TP_ETAPA_ENSINO_16, -CO_ENTIDADE_16)
# Preparando para One Hot Enconding
base <- base %>%
mutate(TP_SEXO = recode(TP_SEXO,
`1` = "Masculino",
`2` = "Feminino"),
TP_COR_RACA = recode(TP_COR_RACA,
`0` = "Não Declarada",
`1` = "Branca",
`2` = "Preta",
`3` = "Parda",
`4` = "Amarela",
`5` = "Indígena"),
TP_ZONA_RESIDENCIAL = recode(TP_ZONA_RESIDENCIAL,
`1` = "Urbana",
`2` = "Rural"),
IN_TRANSPORTE_PUBLICO = recode(IN_TRANSPORTE_PUBLICO,
`0` = "Não Utiliza",
`1` = "Utiliza"),
SITUACAO_15 = recode(SITUACAO_15,
`1` = "Aprovação",
`2` = "Reprovação",
`3` = "Abandono",
`4` = "Falecimento",
`5` = "Sem Informação de Rendimento")
)
# Simave
simave <- simave %>%
select(CD_ALUNO, VL_ISE_ERRO_ALN:VL_PRF_MT)
rm(duplicados, base_temp)
# Joining -----------------------------------------------------------------
base <- base %>%
left_join(simave, by = c(CD_ALUNO_15 = "CD_ALUNO")) %>%
mutate(VL_ISE_ERRO_ALN = str_replace(VL_ISE_ERRO_ALN, pattern = ",", replacement = "."),
VL_ISE_ALN = str_replace(VL_ISE_ALN, pattern = ",", replacement = "."),
VL_PRF_ERRO_LP = str_replace(VL_PRF_ERRO_LP, pattern = ",", replacement = "."),
VL_PRF_LP = str_replace(VL_PRF_LP, pattern = ",", replacement = "."),
VL_PRF_ERRO_MT = str_replace(VL_PRF_ERRO_MT, pattern = ",", replacement = "."),
VL_PRF_MT = str_replace(VL_PRF_MT, pattern = ",", replacement = ".")) %>%
mutate(VL_ISE_ERRO_ALN = as.double(VL_ISE_ERRO_ALN),
VL_ISE_ALN = as.double(VL_ISE_ALN),
VL_PRF_ERRO_LP = as.double(VL_PRF_ERRO_LP),
VL_PRF_LP = as.double(VL_PRF_LP),
VL_PRF_ERRO_MT = as.double(VL_PRF_ERRO_MT),
VL_PRF_MT = as.double(VL_PRF_MT))
rm(simave)
# Gráfico 1 - Distribuição dos Rótulos ------------------------------------
# Exploring Label Distribution
base %>%
group_by(SITUACAO_16) %>%
summarise(Num = n()) %>%
ggplot(aes(x = SITUACAO_16, y = Num, fill = SITUACAO_16)) +
geom_col() +
labs(title = "Número de casos por situação em 2016",
x = "Tipo de situação",
y = "Número de casos",
fill = "Situação em 2016")
# Gráfico 2 - Distribuição por Resultado de 2014 --------------------------
base %>%
group_by(SITUACAO_16, SITUACAO_14) %>%
summarise(num = n()) %>%
mutate(prop = round(num/sum(num)*100, digits = 2)) %>%
ggplot(aes(x = SITUACAO_14, y = SITUACAO_16, label = prop)) +
geom_point(aes(size = num), color = "lightblue") +
geom_text(nudge_y = 0.1) +
labs(title = "Distribuição da Situação em 2016 de acordo com a Situação em 2014",
y = "Situação em 2016",
x = "Situação em 2014",
size = "Número de casos")
# Gráfico 3 - Distribuição por Sexo --------------------------
base %>%
mutate(TP_SEXO = recode(TP_SEXO,
`1` = "Masculino",
`2` = "Feminino")) %>%
group_by(SITUACAO_16, TP_SEXO) %>%
summarise(num = n()) %>%
mutate(prop = round(num/sum(num)*100, digits = 2)) %>%
ggplot(aes(x = TP_SEXO, y = SITUACAO_16, label = prop)) +
geom_point(aes(size = num), color = "lightblue") +
geom_text(nudge_y = 0.1) +
labs(title = "Distribuição da Situação em 2016 de acordo com o Sexo",
y = "Situação em 2016",
x = "Sexo",
size = "Número de casos")
# Gráfico 4 - Distribuição por Raça/Cor --------------------------
base %>%
mutate(TP_COR_RACA = recode(TP_COR_RACA,
`0` = "Não Declarada",
`1` = "Branca",
`2` = "Preta",
`3` = "Parda",
`4` = "Amarela",
`5` = "Indígena")) %>%
group_by(SITUACAO_16, TP_COR_RACA) %>%
summarise(num = n()) %>%
mutate(prop = round(num/sum(num)*100, digits = 2)) %>%
ggplot(aes(x = TP_COR_RACA, y = SITUACAO_16, label = prop)) +
geom_point(aes(size = num), color = "lightblue") +
geom_text(nudge_y = 0.1) +
labs(title = "Distribuição da Situação em 2016 de acordo com a Raça/Cor",
y = "Situação em 2016",
x = "Raça/Cor",
size = "Número de casos")
getwd()
# Gráfico 5 - Distribuição por Transporte Público --------------------------
base %>%
mutate(IN_TRANSPORTE_PUBLICO = recode(IN_TRANSPORTE_PUBLICO,
`0` = "Não utiliza",
`1` = "Utiliza")) %>%
group_by(SITUACAO_16, IN_TRANSPORTE_PUBLICO) %>%
summarise(num = n()) %>%
mutate(prop = round(num/sum(num)*100, digits = 2)) %>%
ggplot(aes(x = IN_TRANSPORTE_PUBLICO, y = SITUACAO_16, label = prop)) +
geom_point(aes(size = num), color = "lightblue") +
geom_text(nudge_y = 0.1) +
labs(title = paste0("Distribuição da Situação em 2016 por utilização",
" de Transporte Escolar Público"),
y = "Situação em 2016",
x = "Transporte Escolar Público",
size = "Número de casos")
# Gráfico 6 - Distribuição por Zona Residencial --------------------------
base %>%
mutate(TP_ZONA_RESIDENCIAL = recode(TP_ZONA_RESIDENCIAL,
`1` = "Urbana",
`2` = "Rural")) %>%
group_by(SITUACAO_16, TP_ZONA_RESIDENCIAL) %>%
summarise(num = n()) %>%
mutate(prop = round(num/sum(num)*100, digits = 2)) %>%
ggplot(aes(x = TP_ZONA_RESIDENCIAL, y = SITUACAO_16, label = prop)) +
geom_point(aes(size = num), color = "lightblue") +
geom_text(nudge_y = 0.1) +
labs(title = paste0("Distribuição da Situação em 2016 por",
" Zona Residencial"),
y = "Situação em 2016",
x = "Zona Residencial",
size = "Número de casos")
# Gráfico 7 - Distribuição por Transporte Público e Zona Residencial --------------------------
base %>%
mutate(TP_ZONA_RESIDENCIAL = recode(TP_ZONA_RESIDENCIAL,
`1` = "Urbana",
`2` = "Rural"),
IN_TRANSPORTE_PUBLICO = recode(IN_TRANSPORTE_PUBLICO,
`0` = "Não utiliza",
`1` = "Utiliza")) %>%
group_by(SITUACAO_16, TP_ZONA_RESIDENCIAL, IN_TRANSPORTE_PUBLICO) %>%
summarise(num = n()) %>%
mutate(prop = round(num/sum(num)*100, digits = 2)) %>%
ggplot(aes(x = IN_TRANSPORTE_PUBLICO, y = SITUACAO_16, label = prop)) +
geom_point(color = "lightblue") +
geom_text(position = position_dodge(width = 0.5)) +
labs(title = paste0("Distribuição da Situação em 2016 por",
" Zona Residencial e Transporte Escolar Público"),
y = "Proporção (%)",
x = "Transporte Escolar Público",
fill = "Situação em 2016") +
facet_wrap(~ TP_ZONA_RESIDENCIAL)
# Gráfico 8 - Distribuição por Distorção Idade-Série --------------------------
base %>%
group_by(SITUACAO_16, EM_DISTORCAO_15) %>%
summarise(num = n()) %>%
mutate(prop = round(num/sum(num)*100, digits = 2)) %>%
ggplot(aes(x = EM_DISTORCAO_15, y = SITUACAO_16, label = prop)) +
geom_point(aes(size = num), color = "lightblue") +
geom_text(nudge_y = 0.1) +
labs(title = paste0("Distribuição da Situação em 2016 por",
" Distorção Idade-Série"),
y = "Situação em 2016",
x = "Distorção Idade-Série",
size = "Número de casos")
# Gráfico 9 - Distribuição por Anos em Distorção Idade-Série --------------------------
base %>%
filter(DISTORCAO_15 < 10) %>%
ggplot(aes(x = DISTORCAO_15, fill = SITUACAO_16)) +
geom_density(alpha = 0.5) +
labs(title = paste0("Distribuição da Situação em 2016 por",
" Distorção Idade-Série"),
y = "Densidade",
x = "Distorção Idade-Série",
fill = "SItuação em 2016")
# Gráfico 10 - Distribuição por Proeficiência em LP  --------------------------
base %>%
filter(!is.na(VL_PRF_LP)) %>%
ggplot(aes(x = VL_PRF_LP, fill = SITUACAO_16)) +
geom_density(alpha = 0.5) +
labs(title = paste0("Distribuição da Situação em 2016 por",
" Proeficiência em Língua Portuguesa"),
y = "Densidade",
x = "Proeficiência em Língua Portuguesa",
fill = "SItuação em 2016")
# Gráfico 11 - Distribuição por Proeficiência em MT  --------------------------
base %>%
filter(!is.na(VL_PRF_MT)) %>%
ggplot(aes(x = VL_PRF_MT, fill = SITUACAO_16)) +
geom_density(alpha = 0.5) +
labs(title = paste0("Distribuição da Situação em 2016 por",
" Proeficiência em Matemática"),
y = "Densidade",
x = "Proeficiência em Matemática",
fill = "SItuação em 2016")
# Gráfico 12 - Distribuição por Nível Socioeconômico --------------------------
base %>%
filter(!is.na(VL_ISE_ALN)) %>%
ggplot(aes(x = VL_ISE_ALN, fill = SITUACAO_16)) +
geom_density(alpha = 0.5) +
labs(title = paste0("Distribuição da Situação em 2016 por",
" Nível Socioeconômico"),
y = "Densidade",
x = "Nível Socioeconômico",
fill = "SItuação em 2016")
# Gráfico 13 - Distribuição por Sexo, Distorção Idade-Série e Situação em 2014 --------------------------
base %>%
mutate(TP_SEXO = recode(TP_SEXO,
`1` = "Masculino",
`2` = "Feminino")) %>%
group_by(SITUACAO_16, EM_DISTORCAO_15, TP_SEXO, SITUACAO_14) %>%
summarise(num = n()) %>%
mutate(prop = round(num/sum(num)*100, digits = 2)) %>%
ggplot(aes(x = SITUACAO_14, y = SITUACAO_16, label = prop)) +
geom_point(color = "lightblue") +
geom_text(position = position_dodge(width = 0.5)) +
labs(title = paste0("Distribuição da Situação em 2016 por",
" Sexo, Distorção Idade-Série",
" e Situação em 2014"),
y = "Proporção (%)",
x = "Situação em 2014",
fill = "Situação em 2016") +
facet_grid(EM_DISTORCAO_15 ~ TP_SEXO)
# Feature Engineering -----------------------------------------------------
# criando coluna de missing_proeb
base$NA_PROEB <- vector("integer", length = length(base$COD_INEP))
base$NA_PROEB <- ifelse(is.na(base$VL_PRF_LP) | is.na(base$VL_PRF_MT), 1, 0)
# criando coluna de missing não tem código simave
base$NA_SIMAVE <- vector("integer", length = length(base$COD_INEP))
base$NA_SIMAVE <- ifelse(is.na(base$CD_ALUNO_15), 1, 0)
# Imputação de dados faltantes para PROEB 2017
base <- base %>%
mutate(
VL_ISE_ALN = case_when(
is.na(VL_ISE_ALN) ~ median(VL_ISE_ALN, na.rm = TRUE),
TRUE ~ VL_ISE_ALN),
VL_PRF_LP = case_when(
is.na(VL_PRF_LP) ~ median(VL_PRF_LP, na.rm = TRUE),
TRUE ~ VL_PRF_LP),
VL_PRF_MT = case_when(
is.na(VL_PRF_MT) ~ median(VL_PRF_MT, na.rm = TRUE),
TRUE ~ VL_PRF_MT
)
) %>%
select(-VL_ISE_ERRO_ALN, -VL_PRF_ERRO_LP, -VL_PRF_ERRO_MT) %>%
select(-CD_ALUNO_15, -NU_SEQUENCIAL_15)
# standardization
base <- base %>%
mutate_at(funs(scale(.) %>% as.vector),
.vars = c("DISTORCAO_15", "VL_PRF_LP", "VL_PRF_MT", "VL_ISE_ALN"))
# One Hot Encoding
base <- base %>%
mutate(FL = 1) %>%
spread(TP_SEXO, FL, fill = 0) %>%
mutate(FL = 1) %>%
spread(TP_COR_RACA, FL, fill = 0) %>%
mutate(FL = 1) %>%
spread(TP_ZONA_RESIDENCIAL, FL, fill = 0) %>%
mutate(FL = 1) %>%
spread(IN_TRANSPORTE_PUBLICO, FL, fill = 0) %>%
mutate(FL = 1) %>%
spread(SITUACAO_15, FL, fill = 0) %>%
mutate(FL = 1) %>%
spread(EM_DISTORCAO_15, FL, fill = 0) %>%
mutate(FL = 1) %>%
spread(SITUACAO_14, FL, fill = 0) %>%
mutate(FL = 1) %>%
spread(SITUACAO_16, FL, fill = 0) %>%
select(-COD_INEP, -CO_ENTIDADE_15) %>%
setNames(c("distorcao_15", "nse_15", "lp_15", "mt_15",
"miss_proeb_15", "miss_simave_15", "sexo_f_15",
"sexo_m_15", "cor_amarela_15", "cor_branca_15",
"cor_indigena_15", "cor_nao_declarada_15",
"cor_parda_15", "cor_preta_15", "zona_rural_15",
"zona_urbana_15", "transporte_nao_utiliza_15",
"transporte_utiliza_15", "abandono_15",
"aprovacao_15", "falecimento_15",
"reprovacao_15", "sir_15", "distorcao_nao_15",
"distorcao_sim_15", "fora_escola_14", "promocao_14",
"promocao_reclassificao_14", "repetencia_14",
"evasao", "nao_evasao")) %>%
select(-nao_evasao)
res <- cor(base, method = c("pearson"))
corrplot(res, type = c("upper"))
corrplot(res, type = c("upper"),
tl.col = "black",
order = "hclust",
tl.srt = 45)
df_corr <- data.frame(var = rownames(res),
cor = as.vector(res[,30])) %>%
arrange(cor)
df_corr %>%
head(n= 10)
df_corr %>%
tail(n = 10)
df_corr %>%
tail(n = 11)
90+65+40+80+60
80+75+90+60+100
405/5
60+90+60+58+80
348/5
95+70+55+75+80
375/5
matrix(data = c(90,65,40,80,60,80,75,90,60,10,60,90,60,58,80,95,70,55,75,80))
matrix(data = c(90,65,40,80,60,80,75,90,60,10,60,90,60,58,80,95,70,55,75,80), nrow = 5)
m <- matrix(data = c(90,65,40,80,60,80,75,90,60,10,60,90,60,58,80,95,70,55,75,80), nrow = 5)
cov(m)
-20+30-180+19*5
-75/4
?cov
m[,2]
m[,2] - mean(m[,2])
m[,2] - mean(m[,2])
mean(m[,2])
m <- matrix(data = c(90,65,40,80,60,80,75,90,60,100,60,90,60,58,80,95,70,55,75,80), nrow = 5)
m
cov(m)
-75/4
23*23+4+27*27+13*13+49
1480/4
m
for(i in 1:4) {
for(j in 1:4) {
m[i,j] <- m[i,j] - mean(m[,j])
}
}
m
m <- matrix(data = c(90,65,40,80,60,80,75,90,60,100,60,90,60,58,80,95,70,55,75,80), nrow = 5)
m
for(i in 1:4) {
media <- mean(m[,i])
for(j in 1:4) {
m[i,j] <- m[i,j] - media
}
}
m
m <- matrix(data = c(90,65,40,80,60,80,75,90,60,100,60,90,60,58,80,95,70,55,75,80), nrow = 5)
for(j in 1:4) {
media <- mean(m[,j])
for(i in 1:4) {
m[i,j] <- m[i,j] - media
}
}
m
m <- matrix(data = c(90,65,40,80,60,80,75,90,60,100,60,90,60,58,80,95,70,55,75,80), nrow = 5)
for(j in 1:4) {
media <- mean(m[,j])
for(i in 1:5) {
m[i,j] <- m[i,j] - media
}
}
m
soma <- 0
for(i in 1:4) {
for(j in 1:4) {
soma <- sum(m[,i] * m[,j])
soma <- 0
print(soma/4)
}
}
for(i in 1:4) {
for(j in 1:4) {
soma <- sum(m[,i] * m[,j])
print(soma/4)
soma <- 0
}
}
cov(m)
matrix(data = 0, nrow = 4, ncol = 4)
m_cov <- matrix(data = 0, nrow = 4, ncol = 4)
for(i in 1:4) {
for(j in 1:4) {
m_cov[i,j] <- sum(m[,i] * m[,j])
}
}
m_cov
m_cov <- matrix(data = 0, nrow = 4, ncol = 4)
for(i in 1:4) {
for(j in 1:4) {
m_cov[i,j] <- sum(m[,i] * m[,j])/4
}
}
m_cov
cov(m)
cov(m) == m_cov
2+3,5+4+5,1+7
2+3.5+4+5,1+7
2+3.5+4+5.1+7
(2+3.5+4+5.1+7)/5
(2.2+2+3+6+5)/5
x <- c(2,3.5,4,5.1,7)
y <- c(2.2,2,3,6,5)
sum(x-mean(x) * y-mean(y))
sum((x-mean(x))*x-mean(x))
num <- sum(x-mean(x) * y-mean(y))
den <- sum((x-mean(x))*x-mean(x))
b1 = num/den
b1  <-  num/den
b1 <- num/den
b0 <- mean(y) - b1*mean(x)
b1
b0
plot(x,y)
lm(y~x)
x <- c(2,3.5,4,5.1,7)
y <- c(2.2,2,3,6,5)
mean(x)
num <- sum((x-mean(x)) * (y-mean(y)))
den <- sum((x-mean(x))*x-mean(x))
b1 <- num/den
b0 <- mean(y) - b1*mean(x)
b1
b0
b1 <- num/den
b0 <- mean(y) - b1*mean(x)
b1
b0
num <- sum((x-mean(x)) * (y-mean(y)))
num
den <- sum((x-mean(x))*x-mean(x))
den
den <- sum((x-mean(x)) * (x-mean(x)))
b1 <- num/den
b0 <- mean(y) - b1*mean(x)
b1
b0
lm(y~x)
3.64-0.426*4.32
b1 <- num/den
3.64-0.7439059*4.32
# questão 4
matrix(c(rep(1,6), c(1:6), log(c(1:6))))
# questão 4
matrix(c(rep(1,6), c(1:6), log(c(1:6))), nrow = 6)
# questão 4
X <- matrix(c(rep(1,6), c(1:6), log(c(1:6))), nrow = 6)
y <- c(-4.501,83.453,12.953,123.824,170.335,183.008)
X
y
lm(y~X)
lm(y~X[,2:3])
X <- matrix(c(rep(1,6), c(1:6), log(c(1:6))), nrow = 6)
y <- c(-4.501,83.453,12.953,123.824,170.335,183.008)
X
y
lm(y~X)
lm(y~X[,2:3])
sqrt(5)
1/sqrt(5)
setwd("~/Desktop/webscraping/revistas_rbep")
